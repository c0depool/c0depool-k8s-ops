apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
  namespace: immich
spec:
  chart:
    spec:
      chart: immich
      version: "0.8.5"
  values:
    env:
      REDIS_PASSWORD: '{{ .Values.redis.auth.password }}'
      DB_HOSTNAME: ${IMMICH_POSTGRES_SERVICE}
      DB_DATABASE_NAME: immich
      DB_USERNAME: immich
      DB_PASSWORD: ${IMMICH_DATABASE_PASSWORD}
    image:
      # renovate: datasource=docker depName=ghcr.io/immich-app/immich-server
      tag: v1.123.0
    immich:
      persistence:
        library:
          existingClaim: nfs-immich-pvc
      configuration:
          storageTemplate:
            enabled: true
          job:
            thumbnailGeneration:
              concurrency: 20
          oauth:
            enabled: true
            issuerUrl: "https://auth.${PUBLIC_DOMAIN}/application/o/immich/"
            clientId: "${IMMICH_CLIENT_ID}"
            clientSecret: "${IMMICH_CLIENT_SECRET}"
            autoLaunch: true
            mobileOverrideEnabled: true
            mobileRedirectUri: "https://photos.${PUBLIC_DOMAIN}/api/oauth/mobile-redirect"

    redis:
      enabled: true
      architecture: standalone
      auth:
        enabled: true
        password: "${REDIS_AUTH}"
      master:
        persistence:
          storageClass: "longhorn"
      replica:
        persistence:
          storageClass: "longhorn"
    server:
      enabled: true
      image:
        repository: ghcr.io/immich-app/immich-server
        pullPolicy: IfNotPresent
      resources:
        limits:
          memory: 4096Mi
        requests:
          cpu: 200m
          memory: 256Mi
      ingress:
        main:
          enabled: true
          ingressClassName: nginx
          hosts:
            - host: &host "photos.${PUBLIC_DOMAIN}"
              paths:
                - path: "/"
          tls:
            - secretName: "${CERT_SECRET_NAME}"
              hosts:
              - *host
      persistence:
        ext-dslr-ro:
          enabled: true
          type: nfs
          server: "${NFS_SERVER}"
          path: /media/Photos/dslr
          readOnly: true
    microservices:
      enabled: true
      image:
        repository: ghcr.io/immich-app/immich-server
        pullPolicy: IfNotPresent
      resources:
        limits:
          memory: 4096Mi
        requests:
          cpu: 200m
          memory: 256Mi
      persistence:
        ext-dslr-ro:
          enabled: true
          type: nfs
          server: "${NFS_SERVER}"
          path: /media/Photos/dslr
          readOnly: true
    machine-learning:
      enabled: true
      image:
        repository: ghcr.io/immich-app/immich-machine-learning
        pullPolicy: IfNotPresent
      resources:
        limits:
          memory: 4096Mi
        requests:
          cpu: 200m
          memory: 256Mi
      env:
        TRANSFORMERS_CACHE: /cache
      persistence:
        cache:
          enabled: true
          size: 10Gi
          type: pvc
          accessMode: ReadWriteMany
          storageClass: "longhorn"

