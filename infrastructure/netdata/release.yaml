apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: netdata
  namespace: netdata
spec:
  releaseName: netdata
  chart:
    spec:
      chart: netdata
      version: "3.7.51"
      sourceRef:
        kind: HelmRepository
        name: netdata
        namespace: flux-system
  interval: 5m
  install:
    remediation:
      retries: 3
  values:
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/whitelist-source-range: "${INGRESS_WHITELIST_COMMON}"
      path: /
      pathType: Prefix
      hosts:
        - &host "netdata.${PUBLIC_DOMAIN}"
      tls: 
        - secretName: "${CERT_SECRET_NAME}"
          hosts:
          - *host
    parent:
      database:
        persistence: true
        storageclass: "longhorn"
        volumesize: 2Gi
      alarms:
        persistence: true  
        storageclass: "longhorn"
        volumesize: 1Gi
      configs:
        health:
          enabled: true
          path: /etc/netdata/health_alarm_notify.conf
          data: |
            SEND_CUSTOM="YES"
            DEFAULT_RECIPIENT_CUSTOM="https://ntfy.${PUBLIC_DOMAIN}/netdata"
            custom_sender() {
                local msg="${host} ${status_message}: ${alarm} ${raised_for}"
                # map status to emoji
                case ${status} in
                    WARNING) EMOJI_ICON="warning";;
                    CRITICAL) EMOJI_ICON="exclamation";;
                    CLEAR) EMOJI_ICON="white_check_mark";;
                esac
                # map status to priority
                case ${status} in
                    WARNING) PRIORITY="high";;
                    CRITICAL) PRIORITY="urgent";;
                    CLEAR) PRIORITY="default";;
                esac                
                httpcode=$(docurl -X POST \
                      -u "${NTFY_USERNAME}:${NTFY_PASSWORD}" \
                      -H "Title: ${name}" \
                      -H "Priority: ${PRIORITY}" \
                      -H "Tags: ${EMOJI_ICON}" \
                      -d "${msg}" \
                      ${1})
            
                if [ "${httpcode}" = "200" ]; then
                  info "sent custom notification ${msg}"
                  sent=$((sent + 1))
                else
                  error "failed to send custom notification ${msg} with HTTP error code ${httpcode}."
                fi
            }      
        netdata:
          enabled: true
          path: /etc/netdata/netdata.conf
          data: |
            [global]
              memory mode = dbengine
              update every = 3
            [ml]
              enabled = no
            [plugins]
              cgroups = no
              tc = no
              enable running new plugins = no
              check for new plugins every = 72000
              python.d = no
              charts.d = no
              go.d = no
              node.d = no
              apps = no
              proc = no
              idlejitter = no
              diskspace = no      
        temperature:
          enabled: true
          path: /etc/netdata/health.d/temperature.conf
          data: |
            alarm: temperature_alarm
               on: sensors.cpu_thermal-virtual-0_temperature
            lookup: average -3s   
            units: celsius
            every: 5s
            warn: $this > 60
            crit: $this > 70
            info: cpu temperature
              to: sysadmin  
      env: 
        DO_NOT_TRACK: 1
      claiming:
        enabled: true
        token: "${NETDATA_TOKEN}"      
    child:
      env: 
        DO_NOT_TRACK: 1
      claiming:
        enabled: true
        token: "${NETDATA_TOKEN}"          
    k8sState:
      persistence:
        enabled: true
        storageclass: "longhorn"
        volumesize: 1Gi
      env: 
        DO_NOT_TRACK: 1
      claiming:
        enabled: true
        token: "${NETDATA_TOKEN}"        
